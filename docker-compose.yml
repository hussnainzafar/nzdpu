version: "3"

services:
  nzdpu_wis:
    profiles: ["backend"]
    build: .
    ports:
      - "8000:80"
    entrypoint: bash
    env_file:
      - ./resources/docker/docker.env
    command:
      - -c
      - |-
        set -eu
        # Change to the site-packages directory
        cd $$SITE_PACKAGES
        # Set up Database
        set +e
        alembic upgrade head
        python -m cli.manage_db create-all
        set -e
        # Run the application
        uvicorn app.main:app --host 0.0.0.0 --port 80
    depends_on:
      nzdpu_db:
        condition: service_healthy
      redis:
        condition: service_healthy

  nzdpu_db:
    image: postgres:16.4
    env_file:
      - ./resources/docker/docker.env
    volumes:
      - nzdpu_db:/var/lib/postgresql/data
      - ./resources/docker/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      # runs this command to check if postgres is ready
      test: pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  redis:
    image: redis
    env_file:
      - ./resources/docker/docker.env
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    command: '/bin/bash -c "redis-server --requirepass $${REDIS_PASSWORD}"'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    restart: always

  firebase_auth_emulator:
    profiles: [ "emulator" ]
    platform: linux/amd64
    image: spine3/firebase-emulator
    env_file:
      - ./resources/docker/docker.env
    ports:
      - 4000:4000
      - 9099:9099
    restart: always
    healthcheck:
      # following from https://github.com/firebase/firebase-tools/issues/5009
      test: wget --no-verbose --tries=1 --spider http://0.0.0.0:9099/emulator/v1/projects/demo-tests/config || exit 1
      interval: 2s
      retries: 20
      timeout: 1s

volumes:
  nzdpu_db:
    driver: local
  cache:
    driver: local
